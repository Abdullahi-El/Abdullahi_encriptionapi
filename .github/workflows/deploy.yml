name: CI

on:   
  push: 
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      run: nuget restore encriptionapi.sln

    - name: Build the solution
      run: msbuild encriptionapi.sln /p:Configuration=Release

    #- name: Run tests
    #  run: dotnet test bin\Release\net8.0\encriptionapi.dll 
      #continue-on-error: true
    - name: Run tests
      run: dotnet test ./encriptionapi.csproj --configuration Release --logger "trx;LogFileName=test-results.trx"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to AWS
      run: |
        # Build the project
        dotnet build -c Release
        # Publish the project
        dotnet publish -c Release -o bin/Release/net8.0/publish
        # Verify the output
        ls -l bin/Release/net8.0/publish
        # Copy the DLL to S3
        aws s3 cp bin/Release/net8.0/publish/encriptionapi.dll s3://elasticbeanstalk-us-east-1-180294209286/
        # Create Elastic Beanstalk application version
        aws elasticbeanstalk create-application-version \
        --application-name EBS-Abdullahi \
        --version-label Abdullahi_Elmi-v2 \
        --source-bundle S3Bucket="elasticbeanstalk-us-east-1-180294209286",S3Key="1737315609566-Abdullahi_Elmi.zip"
        # Update Elastic Beanstalk environment
        aws elasticbeanstalk update-environment \
        --environment-name EBS-Abdullahi-env \
        --version-label  "Inlamningsuppgift-version-1"
